<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ITCompCatalogue.Resources"
    xmlns:converters="using:ITCompCatalogue.Converters"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:viewModel="using:ITCompCatalogue.ViewModel"
    xmlns:animatedTile="using:AnimatedTile"
    xmlns:hubPicker="using:HubPicker"
    xmlns:animations="using:HubPicker.Animations"
    xmlns:helper="using:ITCompCatalogue.Helper">
    <converters:ListViewItemClickedConverter x:Key="ItemClickedConverter"/>
    <SolidColorBrush x:Key="ThemeBrush" Color="DeepSkyBlue"/>        
    <converters:TechIdToImageConverter x:Key="TechIdToImageConverter"/>
    <converters:TechIdToImageTileConverter x:Key="TechIdToImageTileConverter"/>
    <converters:ListViewTechClickedConverter x:Key="TechClickedConverter" />
    <converters:CatClickedConverter x:Key="CatClickedConverter" />
    <converters:IdToColorConverter x:Key="IdToColorConverter" />
    <converters:FromBoolToVisibilityConverter x:Key="FromBoolToVisibilityConverter" />
    <converters:FilterCheckedConverter x:Key="FilterCheckedConverter" />    
    <converters:ListViewTbInvertConverter x:Key="ListViewTbInvertConverter"/>
    <converters:RecommandationToColorConverter x:Key="RecommandationToColorConverter"/>
    <converters:RecommandationToGlyphConverter x:Key="RecommandationToGlyphConverter"/>    
    <Flyout  x:Key="CourseListFlyout" Placement="Top"  >
        <ListView  x:Name="FlayoutListView" ItemsSource="{Binding Path=ListCoursesInDate}" HorizontalAlignment="Stretch" IsItemClickEnabled="True">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <!--<interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemClick">
                    <core:InvokeCommandAction Command="{Binding NavigateToCourseCommand,ElementName=GridRoot}" CommandParameter="{Binding ElementName=FlayoutListView, Path=SelectedItem}"                                                       />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>-->
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" BorderThickness="0" Grid.Column="0" Grid.ColumnSpan="2" Background="{Binding CoursId,Converter={StaticResource IdToColorConverter}}" Margin="2">
                            <TextBlock Text="{Binding CoursId}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="0" Background="WhiteSmoke"  Margin="2">
                            <TextBlock Text="{Binding DateDebut}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1" Background="WhiteSmoke" Margin="2">
                            <TextBlock Text="{Binding DateFin}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Flyout.FlyoutPresenterStyle>
            <Style TargetType="FlyoutPresenter">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Flyout.FlyoutPresenterStyle>
    </Flyout>
    <DataTemplate x:Name="ListViewTemplate">
        <Border BorderThickness="0"  Margin="3" HorizontalAlignment="Stretch">
            <Grid Background="WhiteSmoke">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Border Margin="10" Width="79" Height="79">
                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Stretch="UniformToFill"/>
                </Border>
                <StackPanel Grid.Column="1"  VerticalAlignment="Center" Margin="14.5,2,0,0">
                    <TextBlock Text="{Binding Intitule}"  Foreground="Black"/>
                    <TextBlock Text="{Binding Code }" Foreground="DarkGray"/>
                </StackPanel>
                <Border Background="{StaticResource ThemeBrush}" BorderThickness="0" Grid.Column="2" Width="50" Height="50" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                    <TextBlock Foreground="Black" FontSize="18" Text="{Binding CourseCount}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                </Border>              
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Name="TileViewTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding Intitule}" Margin="5,5,10,5" />
                <AppBarButton Margin="5">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE0F5;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
            </StackPanel>
            <animatedTile:Tile Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="300" Height="300"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
            <animatedTile:Tile Grid.Column="2" Grid.Row="1"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="145" Height="145"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
            <animatedTile:Tile Grid.Column="2" Grid.Row="2"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="145" Height="145"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
            <animatedTile:Tile Grid.Column="0" Grid.Row="3"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="145" Height="145"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
            <animatedTile:Tile Grid.Column="1" Grid.Row="3"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="145" Height="145"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
            <animatedTile:Tile Grid.Column="3" Grid.Row="3"  IsAnimationEnabled="True" Background="{StaticResource ThemeBrush}"
                         Margin="5" Width="145" Height="145"                           
                         hubPicker:TiltEffect.IsTiltEnabled="True" >
                <animatedTile:Tile.TileAnimation>
                    <animations:RightToLeftTileAnimation />
                </animatedTile:Tile.TileAnimation>
                <animatedTile:Tile.OverlayContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Intitule}" Foreground="White" HorizontalAlignment="Left" 
                           VerticalAlignment="Bottom" Margin="10" ></TextBlock>
                    </Grid>
                </animatedTile:Tile.OverlayContent>
                <animatedTile:Tile.FrontContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource ThemeBrush}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding C_id,Converter={StaticResource TechIdToImageConverter}}" Width="40" ></Image>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap"
                               VerticalAlignment="Center" Margin="0" Text="{Binding Intitule}"/>

                    </Grid>
                </animatedTile:Tile.FrontContent>
                <animatedTile:Tile.BackContent>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.Background>
                            <ImageBrush ImageSource="{Binding C_id,Converter={StaticResource TechIdToImageTileConverter}}" Stretch="Uniform" />
                        </Grid.Background>
                    </Grid>
                </animatedTile:Tile.BackContent>
            </animatedTile:Tile>
        </Grid>
    </DataTemplate>
    <helper:ItemTemplateSelector x:Name="ItemTemplateSelector"
                                 SimpleListTemplate="{StaticResource ListViewTemplate}"
                                 MultipleTilesTemplate="{StaticResource TileViewTemplate}"/>
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,18,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverPressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="VerticalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HorizontalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
                                        <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoSelectionHint"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselecting">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnselectedPointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnselectedSwiping">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selecting">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedSwiping">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NotDragging"/>
                                <VisualState x:Name="Dragging">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
                                        <DragItemThemeAnimation TargetName="InnerDragContent"/>
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                        <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggingTarget">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation TargetName="OuterContainer"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingPrimary">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                        <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        <FadeOutThemeAnimation TargetName="SelectionBackground"/>
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                        <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                        <FadeOutThemeAnimation TargetName="PointerOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingSecondary">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentContainer"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                            <Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
                                <Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                            </Border>
                            <Border x:Name="ContentContainer">
                                <Grid x:Name="InnerDragContent">
                                    <Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                                    <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
                                    <Rectangle x:Name="SelectionBackground" Fill="{TemplateBinding Tag}" Margin="4" Opacity="0"/>
                                    <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
                                        <Grid>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                            <Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                            <Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
                                        </Grid>
                                    </Border>
                                    <Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{TemplateBinding Tag}" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
                                    <Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
                                        <Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
                                            <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{TemplateBinding Tag}" Stretch="Fill"/>
                                            <Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                                        </Grid>
                                    </Border>
                                    <TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   <Style TargetType="TextBlock" x:Key="HeaderStyle" BasedOn="{StaticResource HeaderTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontSize" Value="46"/>        
   </Style>
    <Style TargetType="TextBlock" x:Key="SubheaderStyle" BasedOn="{StaticResource SubheaderTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontSize" Value="34"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="TitleStyle" BasedOn="{StaticResource TitleTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Semilight"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="Subtitle" BasedOn="{StaticResource SubtitleTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="BodyStyle" BasedOn="{StaticResource BodyTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>        
   </Style>
    <Style TargetType="TextBlock" x:Key="CaptionStyle" BasedOn="{StaticResource CaptionTextBlockStyle}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>        
   </Style>


</ResourceDictionary>
